#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass ctex-book
\begin_preamble
\input{../writing-common/book-preamble.tex}
\end_preamble
\options openany
\use_default_options true
\begin_modules
logicalmkup
theorems-bytype
coderemarks
tip-inset
note-inset
warning-inset
theorems-chap-bytype
\end_modules
\maintain_unincluded_children false
\begin_local_layout
PackageOptions url hyphens
\end_local_layout
\language chinese-simplified
\language_package default
\inputencoding utf8-plain
\fontencoding global
\font_roman "default" "DejaVu Sans"
\font_sans "default" "DejaVu Serif"
\font_typewriter "default" "DejaVu Sans Mono"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts true
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures true
\graphics default
\default_output_format pdf4
\output_sync 0
\bibtex_command default
\index_command default
\float_placement tbph
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 0
\use_minted 0
\boxbgcolor #d3d7cf
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 2
\paragraph_separation indent
\paragraph_indentation default
\is_math_indent 0
\math_numbering_side default
\quotes_style english
\dynamic_quotes 0
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Chapter
配置Android开发环境
\end_layout

\begin_layout Standard
一个完整的Android开发环境包括两部分：
\end_layout

\begin_layout Description
Android
\begin_inset space \thinspace{}
\end_inset


\begin_inset space \thinspace{}
\end_inset

Stuido 这是谷歌公司推出的官方支持的Android开发工具，其基于流行的JetBrains IDEA集成开发环境，相信学过Java的读者应该比较熟悉了，因
此上手Android Studio
\begin_inset Index idx
status open

\begin_layout Plain Layout
Android Studio
\end_layout

\end_inset

比较容易，只需要再熟悉一下谷歌为开发Android增加的额外功能即可。
\end_layout

\begin_layout Description
Android
\begin_inset space \thinspace{}
\end_inset


\begin_inset space \thinspace{}
\end_inset

SDK 开发Android应用程序中用到的API、系统镜像和调试工具等都在Android SDK中。
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
par{}
\end_layout

\end_inset

值得注意的是，开发Android应用程序还需要良好的网络环境，甚至有的时候还需要设置合适的代理服务器加速网络访问，关于这方面的设置请参照
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
sectionname
\end_layout

\end_inset


\begin_inset CommandInset ref
LatexCommand vref
reference "subsec:设置代理服务器"
plural "false"
caps "false"
noprefix "false"

\end_inset

。
\end_layout

\begin_layout Standard
另外，Android应用程序对电脑的要求比较高，最好配置8G以上的内存，多核心和高主频的CPU也有助于加快程序的构建和调试速度。
\end_layout

\begin_layout Section
下载和安装Android Studio
\end_layout

\begin_layout Standard
从谷歌中文开发者网站下载Android Studio
\begin_inset Index idx
status open

\begin_layout Plain Layout
Android Studio
\end_layout

\end_inset

，网址是 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

https://developer.android.google.cn/studio/
\end_layout

\end_inset

，写作本书时，Android Studio的最新版本是3.2.1。
\end_layout

\begin_layout Standard
Android Studio是绿色软件，因此安装很简单，直接解压缩到合适的目录即可，以后我们称这个目录为AS_HOME。
\end_layout

\begin_layout Standard
在Linux环境下，第一次运行Android Studio需要进入AS_HOME/bin目录，从命令行执行studio.sh脚本：
\end_layout

\begin_layout Standard
\begin_inset Box Shaded
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout LyX-Code
$ cd $AS_HOME/bin
\end_layout

\begin_layout LyX-Code
$ ./studio.sh
\end_layout

\end_inset


\end_layout

\begin_layout Standard
在Windows环境下，
\end_layout

\begin_layout Standard
第一次执行Android Studio的时候，Android Studio自动检测Android SDK
\begin_inset Index idx
status open

\begin_layout Plain Layout
SDK
\end_layout

\end_inset

是否已经存在。如果找不到Android SDK则会提示自动下载
\begin_inset Note Note
status open

\begin_layout Plain Layout
插入截图
\end_layout

\end_inset

。根据网络状态的不同，Android SDK的下载可能需要较长的时间。
\end_layout

\begin_layout Standard
\begin_inset Flex Notice
status open

\begin_layout Plain Layout
在Linux环境下，Android SDK默认安装到$HOME/Android/Sdk目录下，我们可以通过查看这个目录了解Android SDK的组成：
\end_layout

\begin_layout Plain Layout
~/Android/Sdk$ tree -d -L 1
\end_layout

\begin_layout Plain Layout
.
\end_layout

\begin_layout Plain Layout
|-- build-tools # 包含不同版本的编译工具
\end_layout

\begin_layout Plain Layout
|-- emulator # 模拟器
\end_layout

\begin_layout Plain Layout
|-- extras # 本地仓库
\end_layout

\begin_layout Plain Layout
|-- fonts # 字体
\end_layout

\begin_layout Plain Layout
|-- licenses # 验证文件
\end_layout

\begin_layout Plain Layout
|-- patcher # 增量更新
\end_layout

\begin_layout Plain Layout
|-- platform-tools # 通用工具文件夹
\end_layout

\begin_layout Plain Layout
|-- platforms # 不同版本的平台资源
\end_layout

\begin_layout Plain Layout
|-- skins # 虚拟机中的不同效果
\end_layout

\begin_layout Plain Layout
|-- sources # 不同版本的源代码
\end_layout

\begin_layout Plain Layout
|-- system-images # 虚拟机的镜像文件
\end_layout

\begin_layout Plain Layout
`-- tools # 开发测试工具
\end_layout

\end_inset


\end_layout

\begin_layout Section
安装后的配置
\end_layout

\begin_layout Standard
理想情况下，第一次运行Android Studio时应该能够自动配置好Android开发的所有环境。但是凡事总有意外，尤其是网络状况不好时，因此有必要了解一下在
Android Studio中如何手工配置Android开发的各种环境。
\end_layout

\begin_layout Subsection
配置SDK Manager
\end_layout

\begin_layout Standard
通常情况下，如果网络状况良好，第一次运行Android Studio时会自动下载和配置Android SDK。但是如果
\end_layout

\begin_layout Standard
安装Android Studio后，需要配置SDK Manager。SDK Manager的作用是：
\end_layout

\begin_layout Itemize
管理不同版本的Android SDK
\end_layout

\begin_layout Itemize
管理AVD（Android Virtual Device）
\end_layout

\begin_layout Standard
目前阶段配置SDK Manager主要是两个方面的内容：
\end_layout

\begin_layout Subsection
设置代理服务器
\begin_inset CommandInset label
LatexCommand label
name "subsec:设置代理服务器"

\end_inset


\end_layout

\begin_layout Standard
由于众所周知的原因，在国内无法直接访问www.android.com及其相关站点，因此安装Android SDK之前需要设置合适的代理服务器
\begin_inset Foot
status open

\begin_layout Plain Layout
更多的代理服务器可以查询：http://www.androiddevtools.cn 
\end_layout

\end_inset

。首先启动SDK Manager，填写合适的代理服务器：
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename imgs/sdk_manager_option.png
	width 50page%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
设置代理服务器
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
安装需要的Android SDK
\begin_inset Foot
status open

\begin_layout Plain Layout
SDK：（software development kit）软件开发工具包。被软件开发工程师用于为特定的软件包、软件框架、硬件平台、操作系统等建立应用软件的开发
工具的集合。 因此，Android SDK 指的是Android专属的软件开发工具包。
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Android SDK有很多版本，这里安装最新的Android 6.0。敢于Android版本及其SDK的版本对应关系，参见：
\begin_inset CommandInset ref
LatexCommand nameref
reference "chap:Android版本及其SDK版本"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename imgs/sdk_install.png
	width 60page%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
安装Android SDK
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
根据网络状况和代理服务器的稳定性，下载和安装Android SDK可能需要较长的时间，因此建议提前做好安排，比如下班前启动安装程序，第二天一上班就可以享受And
roid编程的快乐了。
\end_layout

\begin_layout Subsection
配置AndroidSDK环境变量
\end_layout

\begin_layout Standard
在debian或者ubuntu中配置环境变量，在命令行中运行一下代码来配置环境变量：
\end_layout

\begin_layout Standard
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout
gedit ~/.bashrc
\end_layout

\end_inset


\end_layout

\begin_layout Standard
在文件的最末端添加下面内容：
\end_layout

\begin_layout Standard
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout
# Android SDK 
\end_layout

\begin_layout Plain Layout
export ANDROID_SDK=/home/dawndiy/workspace/android/android-sdk-linux 
\end_layout

\begin_layout Plain Layout
export PATH=$ANDROID_SDK/platform-tools:$ANDROID_SDK/tools:$PATH
\end_layout

\end_inset

当然， “ANDROID_SDK=” 后面的内容当然是你自己的 SDK 所在的目录，千万别照搬啊，上面的是一个示例目录。修改好了以后记得保存，最后运行一下：
\end_layout

\begin_layout Standard
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout
source ~/.bashrc
\end_layout

\end_inset

这时可以在命令行中测试adb指令是否可以正确执行。如果你需要 root 权限来执行 sudo adb 的时候提示找不到 adb 命令。解决方法如下：
\end_layout

\begin_layout Standard
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout
cd /usr/bin rm -rf adb 
\end_layout

\begin_layout Plain Layout
sudo ln -s $you_sdk_path/platform-tools/adb 
\end_layout

\end_inset

这样就可以解决在 sudo 下也可以使用 adb 了，如果 fastboot 也有这样的情况，同理。
\end_layout

\begin_layout Section
创建AVD
\end_layout

\begin_layout Section
连接真机
\end_layout

\begin_layout Standard
有的时候，你的电脑可能比较老旧，CPU不支持虚拟计算技术（Intel叫做vt-x，AMD叫做SRM？），这个时候无法开启Android Studio内置的模拟器
，只能将app部署到真机测试。把真机作为测试环境的条件是真机上面开启了“开发者模式”，不同的手机可能打开开发者模式的方式不同，这里以小米为例：首先在设置中找到“
关于手机”菜单，然后多次点击MIUI版本选项，每次点击小米都会给出提示还剩几次点击即可打开开发者模式。当开启了开发者模式后，就可以在“更多设置”菜单中看到“开发
者选项”这个菜单，进入后打开如
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
figurename
\end_layout

\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "fig:手机开启开发者模式界面"

\end_inset

所示的选项即可
\begin_inset Foot
status open

\begin_layout Plain Layout
手机需要联网才能打开USB安装和USB调试开关，其道理何在？
\end_layout

\end_inset

。
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename imgs/dev-env/Screenshot_android.settings-commented.png
	lyxscale 40
	width 40text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
手机开启开发者模式界面
\begin_inset CommandInset label
LatexCommand label
name "fig:手机开启开发者模式界面"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
当手机开启了开发者模式后，通过USB线连接到电脑上，在终端输入如下的命令验证一下，如果列出了手机的型号，就可以把App部署到手机上了：
\end_layout

\begin_layout Standard
\begin_inset Box Shaded
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout
$ ./adb devices -l
\end_layout

\begin_layout Plain Layout
List of devices attached
\end_layout

\begin_layout Plain Layout
a353b937 device usb:2-1 product:kenzo model:Redmi_Note_3 device:kenzo transport_
id:1
\end_layout

\end_inset


\end_layout

\begin_layout Section
常见问题
\end_layout

\begin_layout Subsection
如何理解Android SDK和Android Studio的关系？
\end_layout

\begin_layout Standard
两码事
\end_layout

\begin_layout Subsection
安装Android Studio时，需要设置代理服务器（proxy）吗？
\end_layout

\begin_layout Standard
网络好，就不需要设置。国内好用的proxy列表？
\end_layout

\begin_layout Subsection
直接复制一个别人的Android SDK，如何配置Android Studio？
\end_layout

\begin_layout Standard
打开Settings界面，搜索SDK，然后设置SDK的路径即可，参见
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
figurename
\end_layout

\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "fig:设置SDK路径"
plural "false"
caps "false"
noprefix "false"

\end_inset

。
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename imgs/dev-env/sdk-location.png
	width 80line%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
设置SDK路径
\begin_inset CommandInset label
LatexCommand label
name "fig:设置SDK路径"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Subsection
创建新的Android项目后，报告sync错误怎么办？
\end_layout

\begin_layout Standard
截图说明，此时需要重新同步项目：点击Android Studio工具栏右上角附近的sync按钮
\begin_inset Graphics
	filename imgs/dev-env/sync-toolbar.png
	height 0.8em

\end_inset

，等待文件同步完成即可。根据网络状况，也许需要多次同步才能最终成功。
\end_layout

\begin_layout Subsection
创建AVD时报告/dev/kvm没有权限
\end_layout

\begin_layout Standard
在创建AVD时，Android Studio可能会提示当前用户没有操作/dev/kvm的权限，如
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
figurename
\end_layout

\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "fig:创建AVD时报告没有操作/dev/kvm的权限"

\end_inset

所示。
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename imgs/dev-env/avd-dev-kvm-permission.png
	lyxscale 70
	width 70line%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
创建AVD时报告没有操作/dev/kvm的权限
\begin_inset CommandInset label
LatexCommand label
name "fig:创建AVD时报告没有操作/dev/kvm的权限"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
在ubuntu 18.04系统上，需要安装qemu-kvm才能授权普通用户使用/dev/kvm，方法如下：
\end_layout

\begin_layout Standard
\begin_inset Box Shaded
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout
$ sudo apt-get install qemu-kvm
\end_layout

\begin_layout Plain Layout
$ sudo adduser normal-user（你的用户名） kvm # 比如在我这里，命令为：sudo adduser subaochen
 kvm
\end_layout

\end_inset


\end_layout

\begin_layout Standard
执行以上命令后需要重启系统。
\end_layout

\begin_layout Subsection
创建AVD时报告/dev/kvm is nout found
\end_layout

\begin_layout Standard
需要确定你的CPU支持虚拟化：进入BIOS检查CPU设置，查看一下关于虚拟化的设置开关是否打开。
\end_layout

\begin_layout Subsection
模拟器闪退，报告错误代码139
\end_layout

\begin_layout Standard
模拟器无法正常启动，在Android Studio的Event log窗口提示：
\end_layout

\begin_layout Standard
\begin_inset Box Shaded
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout
Emulator: Process finished with exit code 139 (interrupted by signal 11:
 SIGSEGV)
\end_layout

\end_inset


\end_layout

\begin_layout Standard
编辑模拟器属性，将模拟器的图形性能一项改为“software”一般就能够解决问题，如
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
figurename
\end_layout

\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "fig:模拟器的图形加速改为software"

\end_inset

所示。这样可能损失了部分模拟器的性能，根本的解决办法是调查显卡的兼容性？
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename imgs/dev-env/avd-emulator-software.png
	lyxscale 70
	width 70line%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
模拟器的图形加速改为software
\begin_inset CommandInset label
LatexCommand label
name "fig:模拟器的图形加速改为software"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Subsection
设计器无法显示空间（空白）
\end_layout

\begin_layout Standard
至少在Android Studio 3.1.4版本
\begin_inset Foot
status open

\begin_layout Plain Layout
本质上这是Android Studio的Bug，在后续版本中会修正（Android Studio 3.2版本已经修复此问题）。
\end_layout

\end_inset

中，默认的设计器无法显示设计界面，解决办法有多种，最简单的是修改设计器的预览样式，如
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
figurename
\end_layout

\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "fig:修改设计器的预览样式"

\end_inset

所示。默认的预览样式是appTheme，修改为其他样式，比如Light就可以了。
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename imgs/dev-env/apptheme-design.png
	width 80line%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
修改设计器的预览样式
\begin_inset CommandInset label
LatexCommand label
name "fig:修改设计器的预览样式"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\end_body
\end_document
